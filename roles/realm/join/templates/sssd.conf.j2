[sssd]

config_file_version = 2
reconnection_retries = 3
sbus_timeout = 30
services = nss, pam
domains = {{ ad_domain }}
 
[nss]

# Our best practice is that the service users have to be local users and the 
# non-service users are in LDAP-compliant identity/directory service, such as 
# OpenLDAP or Microsoft Active Directory

filter_groups = root,mysql,hadoop,yarn,hdfs,mapred,kms,httpfs,hbase,hive,sentry,spark,solr,sqoop,oozie,hue,flume,impala,llama,postgres,sqoop2,kudu,kafka,accumulo,zookeeper,cloudera-scm,keytrustee
filter_users = root,mysql,cloudera-scm,zookeeper,yarn,hdfs,mapred,kms,httpfs,hbase,hive,sentry,spark,solr,sqoop,oozie,hue,flume,impala,llama,sqoop2,postgres,kudu,kafka,accumulo,keytrustee
reconnection_retries = 3
 
entry_cache_timeout = 10800
entry_negative_timeout = 30
entry_cache_nowait_percentage = 3

[pam]

reconnection_retries = 3
 
[domain/{{ ad_domain }}]

debug_level = 3
subdomains_provider = none
ad_enable_gc = false
cache_credentials = true
ldap_id_mapping = true

# The override_gid will be the primary group of all domain users. 
# This gid must be changed later to a valid one that all users belong to
# override_gid = 574066993

# A new option auto_private_groups was added in SSSD 1.16.1. If this option 
# is enabled, SSSD will automatically create user private groups based on userâ€™s 
# UID number. The GID number is ignored in this case. 
# auto_private_groups = true
 
full_name_format = %1$s
fallback_homedir = /home/%u
default_shell = /bin/bash
ignore_group_members = true
krb5_realm = {{ krb5_realm }}
ad_domain = {{ ad_domain }}
id_provider = ad
chpass_provider = ad
auth_provider = ad

access_provider = simple
# Setting this simple_allow_groups limits to ONLY that group being allowed to log in, use with caution
# simple_allow_groups = hadoop_admin, hadoop_users

# To override the site autodiscovery, specify the AD site to which you want the 
# client to connect by using the ad_site option
ad_site = {{ ad_site }}

case_sensitive = false
enumerate = false
ldap_schema = ad
ldap_user_principal = nosuchattr
ldap_force_upper_case_realm = true
ldap_purge_cache_timeout = 0
ldap_access_order = filter,expire
ldap_account_expire_policy = ad

# If you know that your users and groups will be limited to a specific subsection of the directory, you can limit lookups using the ldap_group_search_base and ldap_user_search_base parameters. This can give significant speedups for large directories.
# ldap_group_search_base = ou=groups,ou=hadoop_prd,dc=ad,dc=sec,dc=example,dc=com
# ldap_user_search_base = ou=users,ou=hadoop_prd,dc=ad,dc=sec,dc=example,dc=com

# uncomment the following if deploying on Azure, which has no reverse DNS or in any environment which has DNS managed by AD.
# dyndns_update = true
# dyndns_refresh_interval = 43200
# dyndns_update_ptr = true
# dyndns_ttl = 3600

ldap_use_tokengroups = false

# krb5_validate = false will prevent unnecessary pac processing and validating if the tgt can get a service ticket for the logged in host
krb5_validate = false

# In environments with large number of users and groups you'll also need to set the idmap range 
# ldap_idmap_range_size = 2000000

